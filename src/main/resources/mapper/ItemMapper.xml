<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.shoppingmall.item.dao.ItemDao">

    <select id="findAll" resultType="com.example.shoppingmall.item.domain.Item">
        SELECT * FROM item
    </select>

    <select id="findById" parameterType="long" resultType="com.example.shoppingmall.item.domain.Item">
        SELECT * FROM item WHERE item_id = #{itemId}
    </select>

    <insert id="insert" parameterType="com.example.shoppingmall.item.domain.Item">
        INSERT INTO item (category_id, name, image, description, price, status, grade, manufacture_country, is_best_seller, is_new, created_at, updated_at)
        VALUES (#{categoryId}, #{name}, #{image}, #{description}, #{price}, #{status}, #{grade}, #{manufactureCountry}, #{isBestSeller}, #{isNew}, #{createdAt}, #{updatedAt})
    </insert>

    <update id="update" parameterType="com.example.shoppingmall.item.domain.Item">
        UPDATE item
        SET category_id = #{categoryId},
            name = #{name},
            image = #{image},
            description = #{description},
            price = #{price},
            status = #{status},
            grade = #{grade},
            manufacture_country = #{manufactureCountry},
            is_best_seller = #{isBestSeller},
            is_new = #{isNew},
            updated_at = #{updatedAt}
        WHERE item_id = #{itemId}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM item WHERE item_id = #{itemId}
    </delete>

    <select id="findBestSellers" resultType="com.example.shoppingmall.item.domain.Item">
        SELECT * FROM item WHERE is_best_seller = true
    </select>

    <select id="findNewItems" resultType="com.example.shoppingmall.item.domain.Item">
        SELECT * FROM item WHERE is_new = true
    </select>
    
    <select id="searchItemsByName" parameterType="string" resultType="com.example.shoppingmall.item.domain.Item">
        SELECT * FROM item
        WHERE name LIKE CONCAT('%', #{name}, '%')
    </select>

    <select id="findItemsByCategory" parameterType="java.util.Map" resultType="com.example.shoppingmall.item.domain.Item">
        SELECT * FROM item
        WHERE 1=1
        <if test="majorId != null">
            AND category_id IN (
            SELECT category_id FROM category WHERE parent_category_id = #{majorId}
            OR parent_category_id IN (SELECT category_id FROM category WHERE parent_category_id = #{majorId})
            )
        </if>
        <if test="middleId != null">
            AND category_id IN (
            SELECT category_id FROM category WHERE parent_category_id = #{middleId}
            OR category_id = #{middleId}
            )
        </if>
        <if test="minorId != null">
            AND category_id = #{minorId}
        </if>
    </select>

    <select id="selectItemWithReviewSummary" resultType="com.example.shoppingmall.item.domain.dto.ItemDto">
        SELECT
            i.item_id AS itemId,
            i.name,
            ROUND(AVG(r.rating), 1) AS averageRating,
            COUNT(r.review_id) AS reviewCount
        FROM item i
                 LEFT JOIN review r ON i.item_id = r.item_id
        WHERE i.item_id = #{itemId}
        GROUP BY i.item_id, i.name
    </select>

</mapper>
