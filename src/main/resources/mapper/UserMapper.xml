<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 네임스페이스  변경 -->
<mapper namespace="com.example.shoppingmall.user.dao.UserDao">


    <select id="findByEmail" parameterType="string" resultType="com.example.shoppingmall.user.domain.User">
        SELECT
            user_id,
            email,
            password,
            pre_password,
            name,
            resident_registration_number,
            phone_number,
            gender,
            registration_at,
            user_id_creation_at,
            sms_marketing_status,
            email_marketing_status,
            customer_status,
            is_withdrawal,
            withdrawal_at,
            withdrawal_reason,
            role,
            created_at,
            updated_at
        FROM user
        WHERE email = #{email}
    </select>


    <select id="findById" parameterType="long" resultType="com.example.shoppingmall.user.domain.User">
        SELECT
            user_id,
            email,
            password,
            pre_password,
            name,
            resident_registration_number,
            phone_number,
            gender,
            registration_at,
            user_id_creation_at,
            sms_marketing_status,
            email_marketing_status,
            customer_status,
            is_withdrawal,
            withdrawal_at,
            withdrawal_reason,
            role,
            created_at,
            updated_at
        FROM user
        WHERE user_id = #{userId}
    </select>


    <select id="findByEmailAndPassword" parameterType="map" resultType="com.example.shoppingmall.user.domain.User">
        SELECT
            user_id,
            email,
            password,
            pre_password,
            name,
            resident_registration_number,
            phone_number,
            gender,
            registration_at,
            user_id_creation_at,
            sms_marketing_status,
            email_marketing_status,
            customer_status,
            is_withdrawal,
            withdrawal_at,
            withdrawal_reason,
            role,
            created_at,
            updated_at
        FROM user
        WHERE email = #{email}
          AND password = #{password}
          AND customer_status = 'ACTIVE'
          AND is_withdrawal = FALSE
    </select>


    <insert id="insert" parameterType="com.example.shoppingmall.user.domain.User">
        INSERT INTO user (
            user_id,
            email,
            password,
            pre_password,
            name,
            resident_registration_number,
            phone_number,
            gender,
            registration_at,
            user_id_creation_at,
            sms_marketing_status,
            email_marketing_status,
            customer_status,
            is_withdrawal,
            withdrawal_at,
            withdrawal_reason,
            role,
            created_at,
            updated_at
        )
        VALUES (
                   #{userId},
                   #{email},
                   #{password},
                   #{prePassword},
                   #{name},
                   #{residentRegistrationNumber},
                   #{phoneNumber},
                   #{gender},
                   #{registrationAt},
                   #{userIdCreationAt},
                   #{smsMarketingStatus},
                   #{emailMarketingStatus},
                   #{customerStatus},
                   #{isWithdrawal},
                   #{withdrawalAt},
                   #{withdrawalReason},
                   #{role},
                   #{createdAt},
                   #{updatedAt}
        )
    </insert>

    <update id="update" parameterType="com.example.shoppingmall.user.domain.User">
        UPDATE user
        SET user_id = #{userId},
            email = #{email},
            password = #{password},
            name = #{name},
            phone_number = #{phoneNumber},
            role = #{role},
            customer_status = #{customerStatus},
            updated_at = #{updatedAt}
        WHERE user_id = #{userId}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM user WHERE user_id = #{userId}
    </delete>


</mapper>